{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/infrastructure/document.service.api.ts","./src/app/infrastructure/infrastructure.module.ts","./src/app/services/document.service.ts","./src/app/services/services.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;ACXA,oHAA0C;;;;;;ICUnC,0BACE;IAAA,0BAAK;IAAA,YAAY;IAAA,iBAAK;IACtB,0BAAK;IAAA,YAAc;IAAA,iBAAK;IACxB,0BAAK;IAAA,YAAkC;IAAA,iBAAK;IAC5C,0BAAK;IAAA,4BAAsD;IAA1C,0OAAyC;IAAC,oBAAI;IAAA,iBAAI;IAAA,iBAAK;IAC1E,iBAAK;;;IAJE,eAAY;IAAZ,yCAAY;IACZ,eAAc;IAAd,2CAAc;IACd,eAAkC;IAAlC,8DAAkC;;;IAV/C,gCACM;IAAA,6BACE;IAAA,0BAAI;IAAA,kBAAE;IAAA,iBAAK;IACX,0BAAI;IAAA,oBAAI;IAAA,iBAAK;IACb,0BAAI;IAAA,yBAAS;IAAA,iBAAK;IAClB,0BAAI;IAAA,oBAAI;IAAA,iBAAK;IACf,iBAAQ;IACR,sEACE;;IAKR,iBAAQ;;;IANE,gBAA0C;IAA1C,oEAA0C;;;IAOpD,0BAA4B;IAAA,0DAA0C;IAAA,iBAAK;;;IAC3E,0BAA4B;IAAA,8CAA8B;IAAA,iBAAK;;ADdhE;IAWE,sBAA6B,UAA2B;QAA3B,eAAU,GAAV,UAAU,CAAiB;QAJxD,aAAQ,GAAG,KAAK,CAAC;QACjB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;QAGtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACrD,CAAC;IAGD,mCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IAED,uCAAgB,GAAhB,UAAiB,iBAA2C;QAA5D,iBASC;QARE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aACrD,SAAS,CAAC,gBAAM;YACd,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/E,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,iBAAiB,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAGD,uCAAgB,GAAhB,UAAiB,KAAY;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;4EA9BU,YAAY;qDAAZ,YAAY;YCVzB,8BACC;YAAA,0BAAI;YAAA,yBAAS;YAAA,iBAAK;YAClB,4BAA+C;YAAnC,0FAAS,4BAAwB,IAAC;YAAC,YAAyD;;YAAA,iBAAI;YAE5G,kEACM;YAaN,2DAA4B;YAC5B,2DAA4B;YAE7B,iBAAM;;;YAnB0C,eAAyD;YAAzD,sIAAyD;YAEjG,eAAgB;YAAhB,mCAAgB;YAcnB,eAAuB;YAAvB,0CAAuB;YACvB,eAAuB;YAAvB,0CAAuB;;uBDnB5B;CAyCC;AA/BY,oCAAY;kDAAZ,YAAY;cALxB,gBAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;;;;AERD,uHAA4D;AAC5D,oKAA0D;AAC1D,oHAAyC;AAEzC,+FAA+C;;;AAE/C;IAYE,mBAA6B,UAA2B;QAA3B,eAAU,GAAV,UAAU,CAAiB;IAAE,CAAC;iDADhD,SAAS,cAFR,4BAAY;qGAEb,SAAS,kDAHT,EAAE,YAJJ;gBACP,gCAAa;gBACb,gCAAc;aACf;oBAdH;CAoBC;AAFY,8BAAS;wFAAT,SAAS,mBATlB,4BAAY,aAGZ,gCAAa;QACb,gCAAc;kDAKL,SAAS;cAXrB,eAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4BAAY;iBACb;gBACD,OAAO,EAAE;oBACP,gCAAa;oBACb,gCAAc;iBACf;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,4BAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;AChBD,oHAA2C;AAC3C,sFAAsC;AACtC,+GAA4C;;;AAG5C;IAOE,4BAA6B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7C,eAAU,GAAG,qIAAqI,CAAC;IAEpG,CAAC;IAGhD,yCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3D,CAAC;IAED,6CAAgB,GAAhB,UAAiB,QAAyB;QACxC,OAAO,SAAE,CAAU,IAAI,CAAC;aACrB,IAAI,CACH,eAAG,CAAC,UAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YAC1E,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,EACF,iBAAK,CAAC,IAAI,CAAC,CACZ,CAAC;IACN,CAAC;wFApBU,kBAAkB;8DAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6BAPpB;CA+BC;AAtBY,gDAAkB;kDAAlB,kBAAkB;cAH9B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACRD,mIAA4D;AAC5D,oHAAyC;AACzC,6HAAwD;;AAGxD;IAAA;KAUC;4DAFY,oBAAoB;2HAApB,oBAAoB,mBAJpB;YACT,yCAAkB;SACnB,YALQ;gBACP,uBAAgB;aACjB;+BARH;CAeC;AAFY,oDAAoB;wFAApB,oBAAoB,cAN7B,uBAAgB;kDAMP,oBAAoB;cARhC,eAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,uBAAgB;iBACjB;gBACD,SAAS,EAAE;oBACT,yCAAkB;iBACnB;aACF;;;;;;;;;;;;;;;;;ACXD,oHAA2C;AAC3C,sFAAsC;AAEtC,+GAA8D;;;AAE9D;IAWE,yBAA6B,MAA0B;QAA1B,WAAM,GAAN,MAAM,CAAoB;QAJvD,eAAU,GAAc,EAAE,CAAC;IAI8B,CAAC;IAE1D,sCAAY,GAAZ;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC;YACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;iBAC3C,IAAI,CACH,eAAG,CAAC,UAAC,IAAI,IAAK,WAAI,EAAJ,CAAI,CAAC,EACnB,uBAAW,CAAC,CAAC,CAAC,EACd,sBAAU,CAAC,eAAK,IAAI,gBAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACO,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,0CAAgB,GAAhB,UAAiB,QAAyB;QAA1C,iBAaC;QAZC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC;YACxC,OAAO,CAAC,GAAG,CAAC,oEAAoE,EAAE,QAAQ,CAAC,CAAC;YAC5F,OAAO,SAAE,CAAC,IAAI,CAAC,CAAC;SACjB;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAChD,eAAG,CAAC,WAAC;YACH,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,EACF,sBAAU,CAAC,eAAK,IAAI,gBAAE,CAAC,KAAK,CAAC,EAAT,CAAS,CAAC,CAC/B,CAAC;IACJ,CAAC;kFAnCU,eAAe;2DAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;0BAPpB;CA6CC;AApCY,0CAAe;kDAAf,eAAe;cAH3B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACRD,sJAA+E;AAE/E,oHAAyC;;AAGzC;IAAA;KAQC;sDAFY,cAAc;+GAAd,cAAc,mBAFd,EAAE,YAHJ;gBACP,4CAAoB;aACrB;yBARH;CAaC;AAFY,wCAAc;wFAAd,cAAc,cAJvB,4CAAoB;kDAIX,cAAc;cAN1B,eAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4CAAoB;iBACrB;gBACD,SAAS,EAAE,EAAE;aACd;;;;;;;;;;;;;;;ACVD,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;;AAEnD,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;ACfnE,oHAA+C;AAI/C,+GAAyD;;;AAEzD,IAAI,yBAAW,CAAC,UAAU,EAAE;IAC1B,qBAAc,EAAE,CAAC;CAClB;AAED,qCAAwB,gBAAgB,+BAAW;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { DocumentService } from './services/document.service';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductDocument } from './model/document';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  downloadDoc$: Observable<ProductDocument[]>;\n  complete = false;\n  isLoadingPutDoc = false;\n  isErrorOnPutdoc = false;\n\n  constructor(private readonly docService: DocumentService){\n    this.downloadDoc$ = this.docService.getDocuments();\n  }\n\n\n  getDocuments(): Observable<ProductDocument[]> {\n    return this.docService.getDocuments();\n  }\n\n  putDocumentAgree(eventProductTuple: [Event, ProductDocument]): void{\n     this.isLoadingPutDoc = true;\n     this.docService.putDocumentAgree(eventProductTuple[1])\n     .subscribe(result => {\n        console.log('AppComponent()  - Agreed with document : ', eventProductTuple[1]);\n        this.isLoadingPutDoc = false;\n        this.isErrorOnPutdoc = !result;\n     });\n     eventProductTuple[0].preventDefault();\n  }\n\n\n  showAllDocuments(event: Event): void{\n    this.complete = true;\n    event.preventDefault();\n  }\n}\n","<div class=\"content\" role=\"main\">\n <h1>Documents</h1>\n <a href=\"#\" (click)=\"showAllDocuments($event)\">View all documents ({{ (downloadDoc$ | async)?.length }})</a>\n\n <table *ngIf=\"complete\" class=\"table\">\n       <thead>\n         <th>id</th>\n         <th>name</th>\n         <th>accepted?</th>\n         <th>link</th>\n       </thead>\n       <tr *ngFor=\"let doc of (downloadDoc$ | async)\">\n         <td> {{ doc.id }}</td>\n         <td> {{ doc.name }}</td>\n         <td> {{ doc.accepted ? 'yes' : 'no'  }}</td>\n         <td> <a href=\"#\" (click)=\"putDocumentAgree([$event, doc])\">Link</a></td>\n       </tr>\n </table>\n <h3 *ngIf=\"isLoadingPutDoc\">Sending document agreement, please wait...</h3>\n <h3 *ngIf=\"isErrorOnPutdoc\">Could not download document...</h3>\n\n</div>\n","import { DocumentService } from './services/document.service';\nimport { ServicesModule } from './services/services.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ServicesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private readonly docService: DocumentService){}\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ProductDocument } from '../model/document';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentServiceApi {\r\n\r\n  serviceUrl = 'https://gist.githubusercontent.com/dilsonnn/ef6899d79b2f0cabeb803240daffaf05/raw/2d6cf00f53245777a4584eee8e9c402265c6a765/docs.json';\r\n\r\n  constructor(private readonly http: HttpClient){}\r\n\r\n\r\n  getDocuments(): Observable<ProductDocument[]> {\r\n    return this.http.get<ProductDocument[]>(this.serviceUrl);\r\n  }\r\n\r\n  putDocumentAgree(document: ProductDocument): Observable<boolean> {\r\n    return of<boolean>(true)\r\n      .pipe(\r\n        map((t) => {\r\n          console.log('DocumentServiceApi().putDocumentAgree(' + document.id + ')');\r\n          return t;\r\n        }),\r\n        delay(2000)\r\n      );\r\n  }\r\n\r\n}\r\n","import { DocumentServiceApi } from './document.service.api';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    DocumentServiceApi\r\n  ]\r\n})\r\nexport class InfrastructureModule {\r\n\r\n}\r\n","import { DocumentServiceApi } from './../infrastructure/document.service.api';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ProductDocument } from '../model/document';\r\nimport { map, shareReplay, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentService {\r\n\r\n\r\n  documents$: Observable<ProductDocument[]>;\r\n  agreedDocs: string [] = [];\r\n\r\n\r\n\r\n  constructor(private readonly docApi: DocumentServiceApi){}\r\n\r\n  getDocuments(): Observable<ProductDocument[]> {\r\n    if (!this.documents$){\r\n      this.documents$ = this.docApi.getDocuments()\r\n      .pipe(\r\n        map((docs) => docs),\r\n        shareReplay(1),\r\n        catchError(error => of([]))\r\n        ) as Observable<ProductDocument[]>;\r\n    }\r\n    return this.documents$;\r\n  }\r\n\r\n  putDocumentAgree(document: ProductDocument): Observable<boolean>{\r\n    if (this.agreedDocs.includes(document.id)){\r\n      console.log('DocumentService.putDocumentAgree() - already agreed with document ', document);\r\n      return of(true);\r\n    }\r\n    return this.docApi.putDocumentAgree(document).pipe(\r\n      map(e => {\r\n        this.agreedDocs.push(document.id);\r\n        document.accepted = true;\r\n        return e;\r\n      }),\r\n      catchError(error => of(false))\r\n    );\r\n  }\r\n}\r\n","import { InfrastructureModule } from '../infrastructure/infrastructure.module';\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    InfrastructureModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class ServicesModule {\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}